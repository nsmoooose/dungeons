Some things to get done

* TODO Embed help as files in the binary?
  Here is a good link on how to do this:
  http://www.linuxjournal.com/content/embedding-file-executable-aka-hello-world-version-5967
* TODO Wire an ui transition to a command object without any callback assigned.
  This makes it possible to do cmd to ui state without a callback with a single
  function call to execute the state change.

  It could be usefull for the cb function to be able to abort the change due to
  some error as well. Or we might wanna assign a cb to the transition object
  instead that checks if the transition is allowed or not.

  We could also provide the state machine with a check that tests each for illegal
  ui state operations.

  Move the transition declaration to the file where the call to d_ui_do_transition
  is done.
* DONE Place menu of list of commands where you want.
  Today this is always rendered at the center of the screen. This should be changed.

* TODO Object: tree
  The first and a simple object.
  A tree has the following parameters:
  - How fast it can spread its seeds.
  - Some kind of logarithmic curve on the growth of the tree.
	How do we control this?
  - How dense it can grow.

  State machine
  - Growing.
  - On fire.
  - Withering/dead
  - Log

  An instance of a tree has the following properties:
  - Age
  - Height
  - Diameter
  - On fire? Damage?
* TODO Accelerate time when doing some development in order to test results.
* TODO Test suite with a coverage report
* TODO emit properties for an object.
  This is a generic way to expose information about an object.

  It should also be possible to get notifications when a property change
  in a kind of subscribe to object.

* TODO Split it up into server and client.
  All communications is done through a file descriptor.
  - A local game is done with a unix socket.
  - A remote game is done with a tcp socket.
* TODO A new directory structure to reflect the client and server part
* TODO Generate a terrain mesh of the heightmap.
* TODO Handle commands within a ui state?
  So when we are within the gamescreen we do want to be able to
  perform.

  Is it a good idea that every action we perform is its own ui
  state?
  Too much code?
